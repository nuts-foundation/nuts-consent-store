openapi: "3.0.0"
info:
  title: Nuts consent store spec
  description: >
    API specification for consent services available at nuts consent store.
    The Nuts consent store has a database of decrypted Subject, Custodian, Actor, Resource combinations.
    This allows for vendor specific logic to query and check for specific consent.
  version: 0.1.0
  license:
    name: GPLv3
paths:
  /consent/check:
    post:
      summary: "Send a request for checking if the given combination exists"
      operationId: checkConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentCheckRequest"
            example:
              {
                "subject": " urn:oid:2.16.840.1.113883.2.4.6.3:999999990",
                "custodian": "urn:oid:2.16.840.1.113883.2.4.6.1:00000000",
                "actor": "urn:oid:2.16.840.1.113883.2.4.6.1:00000007",
                "resourceType": "Observation"
              }
      responses:
        '200':
          description: "OK response, body holds outcome of request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentCheckResponse"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for subject"
              schema:
                type: string
  /consent/query:
    post:
      summary: "Do a query for available consent"
      operationId: queryConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentQueryRequest"
      responses:
        '200':
          description: "OK response, body holds outcome of request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConsentQueryResponse"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for actor"
              schema:
                type: string
  /consent:
    post:
      summary: "Create a new consent record for a C-S-A combination."
      operationId: createConsent
      tags:
        - consent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConsentRequest"
      responses:
        '201':
          description: "Created response"
        '400':
          description: "Invalid request"
          content:
            text/plain:
              example: "missing value for actor"
              schema:
                type: string
  /consent/{proofHash}:
    delete:
      summary: "Remove a consent record for a C-S-A combination."
      operationId: deleteConsent
      tags:
        - consent
      parameters:
        - name: proofHash
          in: path
          description: "the hash of the consent proof, acts as an identifier for the consent record"
          required: true
          schema:
            type: string
      responses:
        '202':
          description: "Accepted response"
        '404':
          description: "not found"
          content:
            text/plain:
              example: "Record not found with hash X"
              schema:
                type: string
components:
  schemas:
    ConsentCheckRequest:
      required:
        - subject
        - custodian
        - actor
        - resourceType
      properties:
        subject:
          $ref: "#/components/schemas/Identifier"
        custodian:
          $ref: "#/components/schemas/Identifier"
        actor:
          $ref: "#/components/schemas/Identifier"
        resourceType:
          type: string
          description: "FHIR resource that is requested"
          example: "Observation"
        validAt:
          type: string
          description: "Date at which consent has to be valid. Optional, when empty, Now() is used. format: 2020-01-01"
    ConsentCheckResponse:
      required:
        - outcome
      properties:
        consentGiven:
          type: string
          enum: ["yes", "no", "limited"]
        limitations:
          type: string
          description: "for future use"
          example:
            "Only measurements are allowed, SOEP not"
    ConsentQueryRequest:
      description: "Query can either be a full text search string like % or a subject identifier."
      required:
        - query
      properties:
        custodian:
          $ref: "#/components/schemas/Identifier"
        actor:
          $ref: "#/components/schemas/Identifier"
        page:
          $ref: "#/components/schemas/PageDefinition"
        validAt:
          type: string
          format: date
          description: "Date at which consent has to be valid. Optional, when empty, Now() is used"
        query:
          type: string
          description: >
            Free text search for finding subjects
            or
            Generic identifier used for representing BSN, agbcode, etc.
            It's always constructed as an URN followed by a double colon (:) and then the identifying value of the given URN
          example: "urn:oid:2.16.840.1.113883.2.4.6.1:00000007, Mr Janse%"
    ConsentQueryResponse:
      required:
        - page
        - results
        - totalResults
      properties:
        page:
          $ref: "#/components/schemas/PageDefinition"
        results:
          type: array
          items:
            $ref: "#/components/schemas/SimplifiedConsent"
        totalResults:
          type: integer
          description: Total number of results
    CreateConsentRequest:
      description: "Consent with sub-records"
      required:
        - id
        - actor
        - custodian
        - subject
        - records
      properties:
        id:
          type: string
          description: "Id as generated by the HMAC of custodian(subject-actor)"
        actor:
          $ref: "#/components/schemas/Identifier"
        custodian:
          $ref: "#/components/schemas/Identifier"
        subject:
          $ref: "#/components/schemas/Identifier"
        records:
          type: array
          items:
            $ref: "#/components/schemas/ConsentRecord"
    ConsentRecord:
      description: "consent record corresponding with a single attachment in the distrubuted consent record."
      required:
        - uuid
        - resources
        - validFrom
        - validTo
        - version
      properties:
        uuid:
          type: string
          description: "uuid, originally taken from the event that started the creation"
        resources:
          description: "Array of fhir resources"
          type: array
          items:
            type: string
        validFrom:
          $ref: "#/components/schemas/ValidFrom"
        validTo:
          $ref: "#/components/schemas/ValidTo"
        recordHash:
          type: string
          description: "the unique hash for the consent record proving consent has been given"
        version:
          type: integer
          description: "the version number for the record (given the same uuid), starts at 1"
    SimplifiedConsent:
      description: "Simplified consent record"
      required:
        - id
        - actor
        - custodian
        - resources
        - subject
        - validFrom
        - validTo
        - version
      properties:
        id:
          type: string
          description: "Id as generated by the HMAC of custodian(subject-actor)"
        actor:
          $ref: "#/components/schemas/Identifier"
        custodian:
          $ref: "#/components/schemas/Identifier"
        resources:
          description: "Array of fhir resources"
          type: array
          items:
            type: string
        subject:
          $ref: "#/components/schemas/Identifier"
        validFrom:
          $ref: "#/components/schemas/ValidFrom"
        validTo:
          $ref: "#/components/schemas/ValidTo"
        recordHash:
          type: string
          description: "the unique hash for the consent record"
        version:
          type: integer
          description: "the version number for the record"
    PageDefinition:
      required:
        - offset
        - limit
      properties:
        offset:
          type: integer
        limit:
          type: integer
    Identifier:
      type: string
      description: >
        Generic identifier used for representing BSN, agbcode, etc.
        It's always constructed as an URN followed by a double colon (:) and then the identifying value of the given URN
      example: urn:oid:2.16.840.1.113883.2.4.6.1:00000007
    ValidFrom:
      type: string
      format: '2020-01-01'
      description: "Date from which a record is valid (inclusive)"
    ValidTo:
      type: string
      format: '2020-01-01'
      description: "Date to which a record is valid (exclusive)"