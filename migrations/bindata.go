// Package migrations Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// 1_create_table_consent_rule.down.sql
// 1_create_table_consent_rule.up.sql
// 2_alter_consent_record_add_version_uuid.down.sql
// 2_alter_consent_record_add_version_uuid.up.sql
// 3_rename_resource_to_data_class.down.sql
// 3_rename_resource_to_data_class.up.sql
// 4_alter_consent_record_make_valid_to_optional.down.sql
// 4_alter_consent_record_make_valid_to_optional.up.sql
// bindata.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_table_consent_ruleDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\xf0\xf4\x73\x71\x8d\x50\x28\xcd\xcb\x2c\x8c\x2f\x4a\x2d\xce\x2f\x2d\x4a\x4e\xb5\xe6\x02\xcb\x84\x38\x3a\xf9\xb8\x2a\xa0\x09\xa2\x28\x4f\xce\x2f\x4a\x41\x51\x9c\x9c\x9f\x57\x9c\x9a\x57\x82\x2a\x85\xa4\xa5\x20\xb1\x24\x13\x24\x0f\x55\x87\xa2\x17\x43\x0e\x10\x00\x00\xff\xff\x55\xac\xed\x91\x9f\x00\x00\x00")

func _1_create_table_consent_ruleDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_table_consent_ruleDownSql,
		"1_create_table_consent_rule.down.sql",
	)
}

func _1_create_table_consent_ruleDownSql() (*asset, error) {
	bytes, err := _1_create_table_consent_ruleDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_table_consent_rule.down.sql", size: 159, mode: os.FileMode(420), modTime: time.Unix(1571041100, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_table_consent_ruleUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcd\x6e\xab\x30\x10\x85\xf7\x3c\xc5\x2c\x41\x62\x75\xa5\xac\xb2\xf2\x85\x49\x8a\x4a\xec\xd6\x31\x55\xb3\x42\x14\x5c\xc5\x55\x8b\x53\x30\x55\xfb\xf6\x55\xf8\x29\xc1\xd0\x74\xed\x33\x87\x6f\xbe\x21\xe0\x48\x04\x82\x20\xff\x63\x84\x53\x66\x94\x2c\x4d\x9a\xeb\xb2\x96\xa5\x01\xd7\x01\x00\x50\x05\x3c\x10\x1e\xdc\x10\xee\xfe\x5b\xad\x3c\xb8\xe3\xd1\x8e\xf0\x03\xdc\xe2\xc1\x6f\x03\x75\xf3\xf4\x22\x73\x33\x4d\x51\x26\x80\x26\x71\xdc\x45\xf2\xa6\x36\xba\x50\x59\x79\x2d\x94\xe5\x46\x57\xcb\x01\xc7\x5b\x3b\x4e\xcf\x9a\xd0\xe8\x3e\x41\x88\x68\x88\x8f\xd0\x94\xea\x3d\xb5\xb9\x19\xb5\x57\x71\xdb\x6e\x7f\x40\xf5\x47\x20\x6f\x3d\xf4\x76\x85\xaa\xf8\xb4\xfb\xd2\x91\x7e\xa1\xf9\xb2\xc9\x99\xe8\x1c\xc6\x2b\x99\xeb\xaa\x18\x6d\x46\x54\xe0\x16\xf9\xa5\x48\x20\x89\x60\x11\x0d\x38\xee\x90\x8a\x4e\x87\x4d\x61\xdf\x81\xe3\x06\x39\xd2\x00\xf7\x33\x26\x55\x78\x5d\xc7\x47\xf6\xaa\x8a\xf4\xb9\xd2\x6f\x10\x9e\xc1\xa6\xc2\xbb\x57\xa3\x97\xde\x8e\x59\x7d\x5c\xbe\x45\x7f\x80\xeb\x27\xe9\x77\x66\xd4\xb2\xe0\x9e\x7b\x67\xa6\x2a\x59\xeb\xa6\xca\x65\xef\x68\x3a\x92\x8e\xca\x3a\xb4\x21\x9d\x9a\xaf\x93\xfc\xed\x87\x6a\x93\x1b\xc6\x31\xda\xd2\xb3\x61\x77\x56\xea\xb5\x91\x0b\x8b\xf6\xbd\x86\x08\xa3\x10\x62\x8c\x02\x21\x20\xfb\x80\x84\x7f\xae\xde\x2f\xc3\xe8\x0f\xea\xfc\xeb\xfe\x74\x0d\x6f\xed\x7c\x07\x00\x00\xff\xff\xc0\x0e\x26\xec\x8b\x03\x00\x00")

func _1_create_table_consent_ruleUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_table_consent_ruleUpSql,
		"1_create_table_consent_rule.up.sql",
	)
}

func _1_create_table_consent_ruleUpSql() (*asset, error) {
	bytes, err := _1_create_table_consent_ruleUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_table_consent_rule.up.sql", size: 907, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_alter_consent_record_add_version_uuidDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x4f\x83\x40\x10\x85\xef\xfb\x2b\xde\x11\x12\x4e\x26\x3d\x71\x5a\x61\xaa\x1b\x61\xa9\xc3\x62\xec\x89\x90\x2e\xa6\x9b\x58\xa8\x80\xfd\xfd\x06\x6a\x4d\x25\x7b\xfe\xde\xcc\xbc\xf7\x26\xe5\x62\x07\xa5\x53\x7a\xc7\x77\xe7\xbe\xea\xa1\x3d\xf4\x83\xad\x2f\xed\x30\xba\xbe\x8b\x85\x90\x99\x21\x86\x91\x8f\x19\xe1\xd0\x77\x63\xdb\x4d\xbf\x22\x30\x69\x99\x13\x4c\xb1\x02\xf5\x74\x3a\xc7\x42\x24\x4c\xd2\x90\x7f\x34\x10\x00\xe0\x2c\x94\x36\xf4\x44\x8c\x1d\xab\x5c\xf2\x1e\x2f\xb4\x87\xac\x4c\xa1\x74\xc2\x94\x93\x36\xd1\xa2\x3c\x37\x93\x9b\xc7\x6f\x6b\x9c\xc5\x9b\xe4\xe4\x59\x72\xf0\xb0\xd9\x84\x60\xda\x12\x93\x4e\xa8\x5c\x4b\x03\x67\xc3\xeb\x8e\x4b\xf3\xe9\x6c\xfd\x31\xf4\x27\xa4\xb3\x31\x5d\x18\xe8\x2a\xcb\xee\xe9\xd4\xfb\xd8\xb1\x19\x8f\xff\xef\xdd\x38\x2a\xad\x5e\x2b\x12\x61\x2c\x84\xd2\x25\xb1\x99\x13\xad\x0b\x41\x49\x19\x25\x06\x81\xb3\x91\x27\x4a\x74\x67\x2d\xfa\x33\x12\x2d\x67\x43\x6c\xb9\xc8\xfd\x05\x2f\xbf\xf3\xd5\x7b\xe5\x3f\x01\x00\x00\xff\xff\xeb\xc2\xc4\xdc\xdb\x01\x00\x00")

func _2_alter_consent_record_add_version_uuidDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_alter_consent_record_add_version_uuidDownSql,
		"2_alter_consent_record_add_version_uuid.down.sql",
	)
}

func _2_alter_consent_record_add_version_uuidDownSql() (*asset, error) {
	bytes, err := _2_alter_consent_record_add_version_uuidDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_alter_consent_record_add_version_uuid.down.sql", size: 475, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_alter_consent_record_add_version_uuidUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x8b\x84\x30\x10\x85\x7b\x7f\xc5\x94\x0a\x36\x77\x60\x65\x35\x67\xe6\xee\x84\x6c\x64\x43\xb2\x6c\x27\xa2\x01\xd3\x24\x6e\x62\xfc\xfd\xcb\x2e\x6b\x63\x65\x39\x03\xef\x7b\xdf\x43\xae\x48\x82\xc2\x1f\x4e\x30\x7a\x17\x8d\x5b\xfb\x60\x46\x1f\x26\x40\xc6\xa0\xe9\xb8\xbe\x08\xd8\x4c\x88\xd6\x3b\x68\x85\xa2\x3f\x92\xc0\xe8\x17\x35\x57\xf0\x55\x67\xe7\x00\x29\xd9\x09\x6e\x28\x9b\x7f\x94\xf9\x77\x55\x15\x67\x83\x4b\x30\x9b\xf5\x29\xf6\xf3\x10\xe7\x03\x21\x6b\x24\xa1\x22\xd0\xa2\xbd\x6a\x82\x56\x30\xba\x43\x72\xf6\xf1\xe1\xf4\xbb\x76\x27\x0e\x0d\xf9\x32\xac\xf6\x75\xee\x6f\x3b\x95\x6f\xc7\x72\x9f\x5a\xd4\xcf\x00\x00\x00\xff\xff\x52\x46\xc5\x47\x1a\x01\x00\x00")

func _2_alter_consent_record_add_version_uuidUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_alter_consent_record_add_version_uuidUpSql,
		"2_alter_consent_record_add_version_uuid.up.sql",
	)
}

func _2_alter_consent_record_add_version_uuidUpSql() (*asset, error) {
	bytes, err := _2_alter_consent_record_add_version_uuidUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_alter_consent_record_add_version_uuid.up.sql", size: 282, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_rename_resource_to_data_classDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\x84\x40\x10\x86\xfb\x7d\x8a\x29\xb9\x84\xca\xe4\xaa\xab\xd6\xe5\xe7\x24\xe2\xac\x0e\x8b\xd1\x6a\x43\x96\x2d\x2e\x31\xa0\xc0\x15\xbe\xbd\x41\xf1\xc2\x49\xe1\x94\xbb\xff\x4c\xbe\x6f\xc6\x08\xb4\x03\x39\x7d\x5b\x82\x86\x38\xf6\xe7\x21\x44\x4a\x14\x7d\x57\xe8\xbb\x31\x76\x93\x1f\x62\xe8\x87\xd6\x9f\x5a\x2a\xd8\xe1\x08\x49\x97\xc0\x6f\x87\x9f\x3e\xdf\x23\x3d\x6b\x31\x77\x5a\x92\x9b\xfd\x7e\x47\x6c\x1d\x71\x5d\x96\xa9\x5a\xb2\xb9\x15\x14\x47\xa6\x7b\xbc\x26\x9b\xc1\xbb\x25\x34\x97\x20\x87\x80\x0d\xaa\x3f\x00\x94\x5c\x07\x2d\x53\x86\x12\x0e\x64\x74\x65\x74\x06\xb5\x3b\x28\xb5\x28\xd5\x5c\x3c\xd5\xa0\x82\x33\xbc\xd0\xb9\x3b\x7d\xf8\x8b\x9e\xe5\x0b\xf8\x96\x24\xbd\x96\x9a\x27\x16\x5c\x41\xdc\xec\x6e\x57\x3b\xfa\xb7\x93\x2a\x94\x30\x6e\xbb\xc5\x94\x42\xdf\x46\xca\xc5\x3e\x50\xdb\x4c\x8d\x0f\x6f\xcd\x38\x1e\x94\xca\xc4\x3e\xae\x89\xb7\x9f\x3f\x87\x5a\xbd\x7f\x05\x00\x00\xff\xff\xf9\x0e\x8e\x7a\xc1\x01\x00\x00")

func _3_rename_resource_to_data_classDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_rename_resource_to_data_classDownSql,
		"3_rename_resource_to_data_class.down.sql",
	)
}

func _3_rename_resource_to_data_classDownSql() (*asset, error) {
	bytes, err := _3_rename_resource_to_data_classDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_rename_resource_to_data_class.down.sql", size: 449, mode: os.FileMode(420), modTime: time.Unix(1576595535, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_rename_resource_to_data_classUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xc1\x4e\x84\x30\x10\x86\xef\x7d\x8a\x39\xb2\x09\xf1\x60\xb2\xa7\x3d\xd5\xf2\xb3\x12\x71\xaa\x43\x31\x7a\x6a\x08\xf4\xb0\x89\x01\x05\xf6\xe0\xdb\x1b\x56\x24\xec\xae\xce\xa9\xe9\xff\x75\x3a\x5f\x6b\x04\xda\x81\x9c\xbe\xcb\x41\x4d\x35\x56\xbe\x7e\xaf\x86\x81\x22\x45\xa7\xaa\xbb\x76\x08\xed\xe8\xfb\x50\x77\x7d\xe3\x0f\x0d\x65\xec\xb0\x87\xc4\x0b\xd0\x04\x7a\xd1\x62\xee\xb5\x44\xb7\xdb\xed\x86\xd8\x3a\xe2\x32\xcf\x63\x35\x23\xa9\x15\x64\x7b\xa6\x07\xbc\x45\x57\xfd\x36\x33\x34\x95\x20\x85\x80\x0d\x8a\x8b\x7b\x29\x3a\x07\x2d\x53\x82\x1c\x0e\x64\x74\x61\x74\x02\xb5\xd9\x29\x35\xbb\x94\x9c\x3d\x97\xa0\x8c\x13\xbc\xd2\xb1\x3d\x7c\xfa\x95\x97\xe5\x95\xe5\xf5\x34\xf1\xc9\x67\x6a\x96\x71\x01\x71\x93\xad\x3d\x7b\x97\xff\x8e\x50\x81\x1c\xc6\x51\x1f\x86\xee\xd8\xd7\xe1\xe6\x0f\x70\xc9\x7e\x17\x7e\xfc\xfa\x08\x94\x8a\x7d\x5c\xb2\x9d\x52\x89\xd8\xa7\xf5\xf8\x97\xd1\xcf\x67\x2d\xbb\xdf\x01\x00\x00\xff\xff\x7e\x08\x1a\x88\xc3\x01\x00\x00")

func _3_rename_resource_to_data_classUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_rename_resource_to_data_classUpSql,
		"3_rename_resource_to_data_class.up.sql",
	)
}

func _3_rename_resource_to_data_classUpSql() (*asset, error) {
	bytes, err := _3_rename_resource_to_data_classUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_rename_resource_to_data_class.up.sql", size: 451, mode: os.FileMode(420), modTime: time.Unix(1576595535, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_alter_consent_record_make_valid_to_optionalDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4b\x6f\x82\x40\x10\xbe\xf3\x2b\x26\x9e\x20\xc1\x04\x4c\x3c\x79\xda\xc2\x58\x49\x61\xb1\xc3\xd2\xd6\x13\x31\x42\xe3\x26\x15\x2c\x0f\x7f\x7f\x03\x08\x56\xa4\xaf\xa4\xe7\xd9\xef\x39\x3b\x36\xf9\x6b\x70\xb8\x8d\x2f\x50\xa5\xf2\x3d\xca\x93\x5d\x96\xc7\xd1\x29\xc9\x0b\x99\xa5\x0b\x45\x61\xae\x40\x02\xc1\xee\x5c\x84\x5d\x96\x16\x49\x5a\x9e\x1f\x01\x21\x67\x1e\x82\xf0\x07\x83\xa8\x3c\x1c\x17\x8a\x62\x11\x32\x81\xe3\x50\x55\x01\x00\x90\x31\x38\x5c\xe0\x3d\x12\xac\xc9\xf1\x18\x6d\xe0\x01\x37\xc0\x42\xe1\x3b\xdc\x22\xf4\x90\x0b\xbd\x79\x79\xdc\x96\xb2\x86\x77\x34\x32\x86\x27\x46\xd6\x8a\x91\x3a\x9b\xcf\x35\x20\x5c\x22\x21\xb7\x30\x18\x3e\x55\x65\xac\xb5\x1c\xa7\xed\x9b\x8c\xa3\xd7\x3c\x3b\x80\x5d\x1b\xe3\xbe\x00\x1e\xba\xee\xe7\x69\x99\x5d\xcf\xc0\xc6\x25\x0b\x5d\x01\x93\x99\x69\x18\x53\xc3\x9c\x1a\xe6\xa4\x05\xec\xb7\xc5\xfe\xda\x44\x0f\x0a\xb9\xf3\x18\xe2\x99\xb7\x6d\xb2\x0f\xda\x11\x9a\xed\xb8\xaa\x06\x51\xce\x79\xf3\xe4\x24\xb3\xaa\x88\x6e\x54\x14\xed\x52\x6d\xab\xf3\xf5\xfa\xc0\xe7\x83\xe2\xd5\xdb\x22\xf5\xc6\x83\xde\x19\xad\xe9\x1d\x1e\x20\x89\xda\xf2\x70\xb5\x10\xa0\x8b\x96\x80\x1a\x30\x46\x75\xe9\x58\xef\x1b\xd5\x9b\xaa\x7a\x81\x4e\xef\x3a\xe2\x92\x7c\x6f\xe4\x1b\xc1\xf3\x0a\x09\x2f\xcb\x71\x82\xbe\xe5\xc5\x37\x36\xd5\xdf\xf8\xfb\xd9\x95\xf6\x97\xb8\xff\x1b\xb2\x09\xa8\x34\xd7\x39\x76\x40\xed\x89\x7d\x04\x00\x00\xff\xff\x8d\xf8\x16\x3c\xbd\x03\x00\x00")

func _4_alter_consent_record_make_valid_to_optionalDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_alter_consent_record_make_valid_to_optionalDownSql,
		"4_alter_consent_record_make_valid_to_optional.down.sql",
	)
}

func _4_alter_consent_record_make_valid_to_optionalDownSql() (*asset, error) {
	bytes, err := _4_alter_consent_record_make_valid_to_optionalDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_alter_consent_record_make_valid_to_optional.down.sql", size: 957, mode: os.FileMode(420), modTime: time.Unix(1578993330, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_alter_consent_record_make_valid_to_optionalUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xcb\x6e\xea\x30\x10\xdd\xfb\x2b\x66\x19\xa4\x6c\xee\x95\x58\xb1\x72\x93\xa1\xb5\xea\xd8\x74\x70\xaa\xb2\x8a\x10\x49\x85\xa5\x12\xd3\xbc\xbe\xbf\xca\x93\x12\xd2\xad\xcf\x9c\xc7\x1c\x4f\x48\x7a\x07\x42\x85\xf8\x01\x75\x6e\xbf\x93\x22\x3b\xb9\x22\x4d\x9a\xac\x28\xad\xcb\x37\x8c\x71\x69\x90\xc0\xf0\x27\x89\x70\x72\x79\x99\xe5\xd5\x30\x04\x84\x8a\x47\x08\x46\xcf\x80\xa4\xba\x5c\x37\x8c\x05\x84\xdc\xe0\x32\xd5\x63\x00\x00\x36\x05\xa1\x0c\x3e\x23\xc1\x8e\x44\xc4\xe9\x00\xaf\x78\x00\x1e\x1b\x2d\x54\x40\x18\xa1\x32\x7e\x37\x79\x3d\x56\xb6\xa5\x8f\x32\x36\x85\x77\x4e\xc1\x0b\x27\xef\xff\x7a\xbd\x02\xc2\x2d\x12\xaa\x00\xf7\xf3\x51\xcf\xa6\xab\x5e\xa3\x39\x7e\xd9\x34\xf9\x2c\xdc\x05\xc2\x36\x98\xd2\x06\x54\x2c\xe5\x6f\xb4\x72\x03\x36\xbd\x9f\x8f\xe5\xf9\xde\x6b\xe4\x41\xac\xc4\x5b\x8c\x03\xbd\x2f\x6c\xda\x27\xc4\x2d\x8f\xa5\x81\x7f\x3d\x5c\xd7\xb3\xc4\xc3\x5a\x45\xd6\x58\x57\x97\xc9\x83\x0b\x5b\xdd\x1a\xec\x7d\xfe\xfe\x25\xd0\x6a\xd6\xaf\xf7\xd8\x97\xdf\x65\xf0\xc7\xa0\xad\xbc\x50\x7b\x24\xd3\x46\x9e\xff\x20\xec\x51\x62\x60\xa0\x25\x2c\x49\xdd\xaa\xf4\xa7\xe2\xfc\xae\xaa\xc9\x60\xf4\xbb\x5f\x71\x4b\x3a\x5a\xbe\x96\xee\x10\x97\x6e\xa5\xc7\x7f\x02\x00\x00\xff\xff\xf8\xbf\x7f\x22\xa8\x02\x00\x00")

func _4_alter_consent_record_make_valid_to_optionalUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_alter_consent_record_make_valid_to_optionalUpSql,
		"4_alter_consent_record_make_valid_to_optional.up.sql",
	)
}

func _4_alter_consent_record_make_valid_to_optionalUpSql() (*asset, error) {
	bytes, err := _4_alter_consent_record_make_valid_to_optionalUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_alter_consent_record_make_valid_to_optional.up.sql", size: 680, mode: os.FileMode(420), modTime: time.Unix(1578993330, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x9a\xed\x6f\x1b\x47\x92\xc6\x3f\x93\x7f\xc5\xac\x80\x0d\xc8\x83\x4f\x9a\xf7\x17\x01\x06\x0e\x9b\xe4\x80\x7c\xb8\xec\xe1\x92\xfd\x74\x7d\x10\xa6\x67\x7a\x14\x62\x25\x51\x21\xa9\xa4\x95\xc0\xff\xfb\xe1\x57\x55\xa3\x17\xdb\x6b\x53\xb6\x77\x17\xfb\xc1\x26\x39\x9a\xa9\xae\xae\xae\x7a\x9e\xa7\xba\xe7\xec\x2c\xf9\xef\x7e\xf8\x6b\x7f\x19\x92\xeb\xcd\xe5\xae\x3f\x6c\xb6\x37\xfb\xe4\xeb\xed\x18\x92\xcb\x70\x13\x76\xfd\x21\x8c\x89\xbf\x4f\x2e\xb7\xff\xee\x37\x37\x63\x7f\xe8\x4f\x93\xd5\x7f\x3c\xfc\x69\x9d\x7c\xf3\xe7\xe4\xfb\x3f\xff\x98\x7c\xfb\xcd\x77\x3f\x9e\x2e\xcf\xce\x92\xfd\xf6\x6e\x37\x84\xfd\x39\xdf\xb3\x8b\x61\x17\xfa\x43\xb8\x38\xf4\xfe\x2a\x5c\x0c\xdb\x9b\x7d\xb8\x39\x5c\xec\xee\xae\xc2\xe9\xb8\xfd\xf5\xe6\x74\xff\xf3\xd5\xc7\xee\xbb\xbb\x9d\xef\xca\x2f\xfa\xab\x43\xd8\x3d\xfe\x39\x0c\xdb\xdd\x78\xd1\x8f\xe3\xc5\x2f\x61\xb7\xdf\x6c\x6f\x2e\xee\xee\x36\xe3\x33\xcb\xc7\x3e\xf3\x38\x4a\x71\xb1\x0b\x37\xfd\x75\xb8\xd8\x05\x9d\xca\xc5\x61\x7b\xc1\xbc\x2f\x86\xab\x7e\xbf\x7f\x66\xfd\x63\xf7\x3e\x5a\x2d\xdf\xef\xc7\x75\xff\xd7\x70\xf1\x4b\x7f\xb5\x19\x79\x72\x7b\x4b\xf4\xfb\xab\x67\x63\xbc\xec\xc9\xc7\x11\xe7\xd5\xba\xdc\x2e\x6f\xdf\x59\xe0\xe5\x72\x73\x7d\xbb\xdd\x1d\x92\xd5\x72\x71\xe2\xef\x0f\x61\x7f\xb2\x5c\x9c\x0c\xdb\xeb\xdb\x5d\xd8\xef\xcf\x2e\x7f\xdb\xdc\x72\x61\xba\x3e\xf0\xb1\xd9\xea\xff\x67\x9b\xed\xdd\x61\x73\xc5\x8f\xad\x3c\x70\xdb\x1f\x7e\x3a\x9b\x36\x57\x81\x2f\x5c\xd8\x1f\x76\x9b\x9b\x4b\xf9\xdb\x61\x73\x1d\x4e\x96\xeb\xe5\x72\xba\xbb\x19\x66\x6f\xfe\x27\xf4\xe3\x8a\x2f\xc9\xff\xfe\x1f\xc3\xbe\x4a\x08\x5f\xa2\x8f\xad\x93\xd5\x7c\x35\xec\x76\xdb\xdd\x3a\xf9\x7d\xb9\xb8\xfc\x4d\x7e\x25\xe7\xaf\x13\xbc\x3a\xfd\x3e\xfc\x8a\x91\xb0\x5b\x89\xdb\xfc\xfe\xd3\xdd\x34\x85\x9d\x98\x5d\xaf\x97\x8b\xcd\x24\x0f\xfc\xe1\x75\x72\xb3\xb9\xc2\xc4\x62\x17\x0e\x77\xbb\x1b\x7e\xbe\x4a\xa6\xeb\xc3\xe9\xb7\x58\x9f\x56\x27\x18\x4a\xfe\xf8\xf3\x79\xf2\xc7\x5f\x4e\xd4\x13\x19\x6b\xbd\x5c\xbc\x59\x2e\x17\xbf\xf4\xbb\xc4\xdf\x4d\x89\x8e\xa3\x83\x2c\x17\x17\xea\xce\xeb\x64\xb3\x3d\xfd\x7a\x7b\x7b\xbf\xfa\xca\xdf\x4d\xaf\x92\xcb\xdf\xd6\xcb\xc5\x70\xf5\xed\xec\xe9\xe9\xd7\x57\xdb\x7d\x58\xad\x97\x5f\xca\x1f\xcc\xa8\xfd\xbf\x61\x28\xec\x76\xea\xb7\x5d\xf4\x77\xd3\xe9\x9f\x70\x7d\xb5\x7e\xc5\x1d\xcb\x37\xcb\xe5\xe1\xfe\x36\x24\xfd\x7e\x1f\x0e\x84\xfc\x6e\x38\x60\x45\xe6\x67\xeb\xb1\x5c\x6c\x6e\xa6\x6d\x92\x6c\xf7\xa7\xff\xb9\xb9\x0a\xdf\xdd\x4c\xdb\x87\xe7\x6c\x09\xe7\xeb\x4f\x2c\xc8\x1a\x26\x89\x2d\xe3\x72\xb1\xdf\xfc\x26\xbf\x37\x37\x87\xba\x5c\x2e\xae\x01\x93\xe4\xc1\xe8\x7f\x6d\xc7\x20\x17\x7f\xdc\x5c\x87\x84\x34\x39\xe5\x1b\xe3\x9c\x9d\x25\xdf\x63\xcb\xa6\x40\x66\x49\x18\x34\x87\x56\xd3\xe6\x6d\x27\xd6\x72\xff\x6a\x6d\x43\xe3\xcc\xc3\xb3\xa7\xf2\xa4\x5a\xfd\x01\x8f\x9e\x5a\xc5\xc5\x0f\x58\xe5\xfe\xd5\x5a\x27\xf0\xdc\xa8\x3c\xa8\x46\x99\xc8\x33\xa3\x4c\xf4\x03\x46\xb9\x7f\xb5\x7e\x1a\x86\xe7\xa6\xe5\xf1\xbf\x6d\x7a\x33\xdd\x4b\xb4\x3e\x3c\x02\xa1\x5c\xad\x1f\xc3\xfa\xce\x10\x4f\x62\xfd\xdd\xfe\x9b\xcd\xee\xd9\x30\xbf\xfe\x14\x0e\x3f\x85\x5d\xd2\x27\xe3\x66\x17\x86\xc3\x76\x77\xff\x81\xe1\xe4\xf9\xd5\x3a\xf1\xdb\xed\xd5\xbb\x53\xf9\x6a\xbb\x3f\x65\x1e\x8c\xf1\x87\xd7\x49\x3a\x2f\xc5\xfd\xfe\xd9\x90\x9b\x7d\xb2\xbf\xdf\x7f\x2c\x76\x3f\xdc\xef\x75\x3d\xc2\x6e\xea\x87\xf0\xfb\x9b\x27\xe3\x59\x72\x53\xaf\x17\x17\x1f\xa0\x92\x6f\xb6\xbf\xde\xfc\xf0\xf3\x55\xf2\xda\x92\x7d\x75\xe2\x62\x36\xb9\xd8\x7a\x17\xd3\xd6\xc5\x34\x7d\xff\xbf\x69\x72\xb1\xc9\x5d\x4c\x3b\x17\x27\x3e\x27\x17\x2b\xae\xf3\xaf\x74\xb1\x29\x5c\x6c\x32\x17\xdb\x51\xaf\xe7\xad\x8b\xc3\xe8\xe2\xe0\x5d\xcc\x07\x17\xdb\xc1\xc5\x7c\x72\xb1\xec\x5d\xcc\xb9\x1e\xf4\x37\xdf\xb9\x56\x06\x17\x7d\xe5\x62\xa8\x5d\x4c\x73\x7d\xae\x2d\x5d\x2c\x5a\x17\x8b\xde\xc5\xa9\x73\xd1\xb7\x2e\xe6\xbd\x8b\x7d\xaa\x7e\xf4\xb9\x8e\x53\x4e\x8f\xf6\xc4\x56\xe6\x62\x95\xb9\xd8\x0d\xf6\x0f\x5f\x1b\xfb\xde\xeb\xf7\x36\x57\x5b\x6d\xe5\x62\x5f\xba\xd8\x57\x2e\xe6\xa9\x8b\x3e\x73\x31\x2f\x5d\xcc\x0a\xfd\x94\x79\x56\x2e\xb6\x8d\x8e\x97\x35\x2e\x96\x85\x8b\x69\x70\x31\x7b\x2b\x3e\x93\xdd\xdb\x0f\x2e\x86\xd1\xc5\x2e\xd3\xb1\x1f\xe3\x78\x32\x53\xc1\x11\x4b\x64\xb8\xf5\x3e\x3e\x98\xd1\xed\x09\x9f\x2c\x17\x8b\x63\xd6\xfd\xd5\x72\xb1\x38\x39\x46\x91\x9c\xbc\x5a\x2e\xd6\x64\xd4\xb1\xee\xe2\xe9\xbf\x09\xac\x3e\xf5\x54\x70\xf5\x81\xbc\x8e\x9f\xf5\xc7\x18\xe3\x01\xe8\x05\xaa\xcf\x5f\xbf\x5d\x2c\xbf\x83\x7b\xe7\xc9\x91\x53\x15\x24\x3c\x4f\xb2\xaa\x7b\x25\x35\x78\xfe\x14\x9f\x56\x65\x9e\xae\xe5\x3a\xa8\x71\xae\xa8\xf2\x97\x9b\x4d\x5c\x65\x55\x93\xa5\x65\x96\xa5\xe9\xab\x24\x5d\xbf\x59\x2e\x7a\x3c\xf9\x4a\x82\xf0\xbb\xcc\xfc\x3c\xb1\x00\xe0\xe6\xb9\xfc\xff\xe6\x61\xf9\xfa\x57\x47\x57\xed\x5f\x6e\x3f\xb5\x66\xa9\xa1\x2e\xd7\x5a\xac\x83\x8b\xbd\x77\xb1\x48\x35\x77\xc9\xfd\xa9\x71\xb1\x18\x5c\x1c\x2a\xad\x53\x6a\xa7\xce\x5d\x6c\x2a\xad\x09\x72\xd9\xe7\x5a\xf3\xdc\x5f\x76\x2e\xb6\xbd\xd6\x59\x18\x5c\x1c\x6b\x17\x8b\x4c\xf3\xde\x17\x2e\x96\xd4\x48\xe9\x62\x65\x36\xa5\x76\xbc\x8b\x55\xa1\xe3\xf2\x7b\xf2\x2e\x4e\xb5\x7d\xa7\xa6\x3b\x17\x87\xcc\xc5\x31\x75\xb1\x29\xb5\x76\x8a\x42\x6b\xae\x9e\x5c\xf4\xd4\x76\xe6\x62\x48\x5d\x2c\x99\x6f\x69\xf5\x6b\x73\xac\x0b\x9d\x27\x63\xd4\xb5\x8b\x5d\x69\x73\x19\xb5\xde\x83\xd7\x39\x74\xb5\xce\x29\x65\xac\x46\x3f\x89\x13\x78\x95\x56\x1a\x07\xe2\x92\x05\x17\x47\xfb\x1e\x82\x8b\x53\x70\xb1\xf2\x2e\xf6\xa3\xde\x03\x0e\x85\xc2\xc5\x11\xbc\x0b\x8a\x81\x69\xa1\xcf\x84\x5c\xe7\x82\xdf\x5c\x23\x8e\x53\xa1\x18\x99\xe7\x8a\x93\xcc\x0d\xdf\xc0\xa8\xbc\x76\xb1\x4d\xf5\x13\xfc\xc4\x46\x59\x69\xbc\x7b\x62\x5b\xbb\xe8\x7b\xf5\xb1\xea\x5c\x6c\x3a\xc5\x4c\xe6\x18\x58\x8f\x5a\xf1\x0c\xbc\x64\x3e\x43\xa3\xbe\x16\x5e\x31\x75\x98\x34\x06\xc4\x36\x80\xa5\x41\xd7\xb8\x6d\x5d\xac\x5b\xfd\x6c\x27\xfd\xbb\xd8\xec\x5d\x2c\x46\xc5\x62\xdf\xb9\x98\x75\xfa\x9d\x31\xc4\x3f\xaf\x79\xd4\x80\xb5\xc4\x1f\x1f\x1a\x5d\x0b\xe6\xcc\xb3\xc2\x07\xb5\x61\x6b\xaf\x6b\xec\x4b\x5d\xf7\x31\x57\x5c\x6c\xc8\xc5\xcc\x70\x9d\x98\x75\x2e\x76\x9d\xfa\x98\x91\x3b\xb5\x8b\xb9\xb7\x6b\x5e\xed\x64\xf8\x3c\xda\x9c\x4b\xcd\x87\xac\x56\x1b\xac\x2b\xb9\x81\x1f\x6d\xe7\x62\xcd\xdf\x58\xdf\x51\x39\x84\x75\xec\x52\xcb\xdd\xa0\xb9\xc5\x1a\xd4\xcc\x89\x3a\xc9\x74\x4d\x53\x62\xde\xa9\x9f\x52\x43\x8d\xae\x57\x6e\xf9\xda\xb4\x2e\x56\xa3\xc6\x99\x79\x93\xc7\xf8\x86\x5d\xe6\xed\xed\x59\x62\x41\xfe\x74\x41\xf3\x81\xb5\x1c\x72\x17\xbd\xd7\x58\xf6\x85\x8b\x5d\xe3\xe2\x18\x34\x87\x64\x6d\x47\xad\x1b\xf2\x9d\x1c\x20\xc6\xe4\x06\xf3\xcf\x1b\x17\x03\xf7\x34\x9a\xe3\x63\xa9\x71\x0b\x36\x46\xc3\xba\x34\x3a\x0e\xbc\x56\xcd\x71\x63\xdc\xde\xc5\x1a\x6e\x9d\x74\xcd\xe1\x53\x30\x81\x71\xf9\x1b\xbf\x59\x1f\x6a\xac\xb3\x9a\xe9\xc9\x1b\xf2\xd6\xb8\x4c\x6a\xb1\xd7\x6b\x99\xd7\xf5\xa1\xee\xc7\x5e\xe7\x4b\xed\x13\x4b\xfc\xab\x6a\xcd\x23\xf2\x86\xb5\x4e\xbd\x62\x00\xb1\xf2\xd8\xaa\x15\xb7\x88\x01\x31\x02\x6f\xd0\x07\xf0\x3e\x3e\x48\x5d\x7b\x9d\x3b\x75\x4d\x1c\xfa\xa0\xb1\x82\xe3\x87\x42\xf3\x04\x6e\x66\x1c\xf1\xd1\x6b\x9d\x82\x1f\xac\x39\xf1\xc7\xef\x06\xbb\xcd\xbb\x3c\x3d\xa4\xca\xe1\xac\x2b\x38\x26\x58\x5a\xbc\x88\xa7\x05\x94\xbf\x2c\x4b\x8b\xc9\x8f\x72\xb4\xf6\xb7\xc7\x33\xb4\x58\xfd\x5c\x7e\x7e\x3a\xdb\x7f\x04\x3b\xcf\x93\x34\x6e\xee\xd2\xe6\xa5\xdc\x5c\xe5\x5d\x5b\x65\xcd\x17\xe1\xe6\x23\xb7\x50\x3e\x47\x5d\xd7\x83\x56\x0b\xe8\x8c\xa2\x6d\x0b\x45\xd8\x99\xa9\xa9\x5e\xaa\x02\x54\xa4\x12\x40\xb7\x2c\x57\x34\x23\x8b\x41\x5e\x10\xba\xea\xb5\x12\x05\x31\xbd\x7d\xef\xb4\x6a\xa8\x34\xc9\xf6\x4e\xd1\x30\x0f\x8a\x10\x1d\xa8\x44\x45\xb6\x5a\x75\xd3\xa8\xff\x40\x43\xaa\x1e\xa4\xcc\x2b\x45\x99\xc9\x2a\x71\x00\xa9\x06\x45\x48\xa9\xa2\x4a\xed\x53\x6d\xa0\x31\x6c\xdc\xf4\x8a\x94\xa0\x42\x68\x14\xd9\xa8\x58\x90\x7f\x66\x0a\xe6\x09\xb3\xe6\x56\xb1\xa8\x04\x18\x8f\x7b\x89\x1b\x73\xc7\x57\x98\x00\x74\x00\x3d\x88\x13\xac\x05\x3b\x85\x59\x39\x34\xaa\x04\x60\x28\xfc\xf5\x93\x32\x2e\xf6\x6a\x63\x17\x54\x7d\x39\xa8\xca\x07\x6d\x60\x2f\x10\xa3\x30\x3f\x51\x2f\xa8\x7e\xee\x11\xa6\x4a\x15\x7d\x8a\xf2\x51\xed\x83\xb8\xa8\x0b\xd8\x12\x76\x66\x0e\x65\xa9\x08\x96\x8d\xaa\xb0\x40\x71\x18\x3c\x33\xc4\x02\x5d\xa5\x83\x18\xd4\x36\xf3\x67\x5c\x18\x01\x3b\xa0\x2a\xb6\x50\x14\x74\x19\xa8\x8c\xa2\xd1\xeb\xac\xcd\x60\x4a\xa8\xf6\xda\xc5\xa0\xac\xb8\x1e\x4a\xfd\x27\xec\x91\xab\x12\xf1\xa9\x8b\x63\xa7\xc8\x09\x0b\x82\xd0\xe4\x09\xb6\xc8\x15\xd6\x18\xff\x4a\x43\x3c\x58\x43\x10\xd5\x2b\x23\x70\x1d\xc5\x02\xdb\x90\x93\xe4\x01\x48\x2f\x0a\xa6\xd1\x6e\x09\xb4\x17\xd5\x37\x2a\x2b\x07\xeb\xcc\x50\x21\x30\x2d\xcf\x8e\x33\xe3\xb7\x1a\x6f\xd6\xaa\x35\xf4\x25\x97\x47\x63\x66\xe9\xe8\x60\xbe\xa0\xb9\x8d\xaf\xe4\xac\x74\x8d\xa5\xae\x03\xb9\x87\x8d\x79\x0d\xb9\x1f\x56\x91\x5a\x31\x95\xc2\x3d\xe4\x2b\x4c\x8e\x7f\xe4\x08\xfe\xa2\x54\x89\x35\xf3\x44\x39\x4d\xbd\x32\x3a\xe3\xf0\xbb\xb6\x8e\x8e\xb9\xc2\xde\x43\x6b\xb9\x5f\xd9\xda\x4d\x1a\x8f\xd1\xf2\x9f\x3c\x2f\xa6\x47\xf5\xf8\x94\x55\x88\x21\x6b\x3a\x94\xaa\xe4\x46\xff\xf4\xbe\x47\x56\x79\x19\x9c\x7c\x02\xc7\xbc\x6c\x00\x61\x9c\x97\xee\x2c\xbf\xc5\x3f\x2f\x1b\xf1\x28\x36\xfa\xa4\x28\x7d\x29\x6e\x7a\x79\x38\x8c\xa9\xca\xa6\xfa\x17\x60\xaa\xcf\xe8\x28\x07\xad\x63\xea\xbf\x9d\x77\x69\x9e\xf0\x14\x35\x02\x66\x0a\x46\xa1\xc6\x7a\xc5\x36\xc1\xe7\x54\x95\x68\x51\x69\xdd\x85\x5a\xf1\x42\xb0\x6a\x70\xb1\x2e\xb5\x16\x51\xb6\xfc\xce\x6d\xd7\x45\x3a\x36\xdb\x91\xa1\xfb\x80\x67\x26\xc3\x26\xd9\x61\x0a\x8a\x8d\xe0\xbf\xd8\xef\x14\xdb\xc0\x19\xfc\x41\xe1\x63\x17\x15\x49\x97\x40\xf7\x48\x9d\x32\x67\x30\x11\xff\xe1\xaa\xac\xb1\x1d\x2c\xaf\xd8\x85\xbf\x74\x1b\xdc\x07\xc7\xc1\xc7\x28\xdf\x3e\x55\x8c\xa3\x13\x84\xa7\x88\x19\x38\x07\xb6\xd3\x51\x49\x57\xec\xad\xc3\xaa\x0c\xd3\x27\xeb\xc4\xad\x13\x63\xac\xc2\x3a\xab\xc9\x3a\xe3\xda\x78\x92\x58\xd3\x15\x83\xe3\x69\xa7\x73\xce\x5b\xc5\x7c\x62\x4b\x5c\x27\xeb\x06\x78\x2e\xb3\x67\x45\x33\x58\x87\xcf\xbd\xf0\x1b\x76\x50\xde\x93\xa9\x6d\xb1\x5f\x28\x97\x12\x33\x62\x0a\x1f\xc1\x95\xf0\x28\xbe\xa2\xd2\xe1\x7d\xe2\x84\x9a\x9f\x39\x99\x18\x0a\xcf\x60\x2f\x53\xee\x95\xae\xc7\x6b\xc7\xc7\x7a\xa1\xaa\x51\xe0\xf8\x57\xe4\xca\x79\xdc\x4f\x27\xcc\x5a\x4b\x97\x08\x8f\x55\xfa\x5d\xf4\x41\x6e\xbb\x74\xbd\xf2\xc6\x30\xbd\x9b\x77\xb2\xbb\x96\xeb\x7a\x0c\xd6\x75\x66\xfd\x67\xe1\xeb\xa7\x2a\xf8\x97\x98\x7f\x11\xb6\xbe\x57\xd9\xbf\x64\xb4\x2f\x89\xab\x7f\x0f\xc5\xff\xd2\x40\x18\xa6\xe6\x6d\xfe\xcf\xc4\xd4\x8f\x1c\x71\x7e\x8e\xea\x97\xfd\xb9\x4c\xd5\x4d\x69\x48\xf8\xa0\xfa\x6b\x45\xa1\x66\xd4\xfd\x05\x2a\xd9\x9b\xb2\xa3\x6f\x47\xf9\xa1\xf2\x51\x9c\xa3\x29\x70\xaa\x9b\x8a\x0e\x56\x79\xa9\xa9\x68\x94\x65\x6d\x15\xdc\xd5\xaa\x7c\x40\x4d\x50\x1c\x34\x03\x95\x40\x11\xd0\x8c\xea\x47\x59\x51\xe1\xa0\x64\x69\x2a\xbb\xb3\x4a\xc7\xef\xd2\xf6\x29\xa4\x82\xad\x9f\x47\xe5\x82\x2c\xc5\xbc\x97\xe1\x15\x41\x98\x07\x4a\x0f\x14\x10\xff\x32\x55\xcc\x28\xb3\xac\xb4\x7b\x1b\x45\x45\xec\xe3\x13\x68\x22\x7b\x0d\x93\x75\x2d\xad\x2a\x68\xe6\x39\x23\x05\xca\x11\xd4\xc5\x37\xc6\xc7\xcf\xae\xd1\xb9\xe0\x17\xf7\x73\x6f\x11\x94\x01\xf2\x42\xbb\x8e\x7a\x1e\xa3\x51\x3b\xa0\xb2\xa0\xe5\xa8\xfb\x52\x20\x4b\x6d\x6a\xbe\x31\x95\x2b\x7b\x87\x9d\xde\x0f\x3b\xc9\xde\x58\xa5\xfe\x97\xb6\xef\x02\xd3\xd0\x11\xe5\xd6\x51\x0d\x99\xce\x07\x65\x4a\x07\xd1\xd9\x3e\x19\x7e\xd1\x65\x81\x92\xac\x5f\x61\x68\xd7\xd9\xbe\x69\x6a\x4a\x95\x0e\x8a\xd8\xa1\x54\x59\x47\xd8\x51\x94\xac\x75\x2d\xa8\x5d\x5f\x29\x9a\xc2\x0e\x7c\xe7\x13\xa5\x8a\x1d\xba\x08\xbe\xb3\xbe\xac\x03\xaa\x17\xff\x40\x79\xfc\x2f\x2c\xb7\xa6\x56\x73\xa4\x0b\x9a\x43\x28\x6b\xae\x49\x9e\x94\x9a\x0f\x7c\xef\x7a\x45\xf8\xac\xb6\x0e\xc2\xf6\x2b\xe9\x28\x61\x28\xd6\x10\x9b\x28\x6c\x6f\xdd\x0b\x6b\xd4\x99\x42\xe0\x1e\xe2\x31\x2b\x03\xba\x2d\x61\x66\xdb\xa3\xe2\x3a\x6b\x55\xa5\xd6\xc5\x0d\xca\xc6\xe9\x64\x79\x66\x1d\x03\x5d\x55\x67\x35\x80\xd2\xe6\x19\x98\x9d\xae\xd6\xcf\x6b\x6e\xeb\x2f\xeb\x35\x2a\x6b\xa2\xe8\xdf\x66\x14\x58\x2a\xb5\x3d\x38\xe9\x56\xb3\xf7\x33\xca\x71\x10\xf0\x09\x5c\x72\x9c\x61\x61\x91\x63\xdf\xca\x78\x8b\x3f\x8e\x1b\xe1\x28\xe6\x78\x51\x14\xbe\x14\x67\x1c\x3f\xed\x59\x81\x97\x2f\x3e\xc7\xa9\xab\xae\xaa\x8a\xea\x1f\xc1\x16\x9f\xae\xbc\x1b\xe3\x8a\xe1\x09\x57\x14\x4f\xb8\x42\xd4\xae\x71\x45\x61\xfb\xea\x72\x5e\x9b\xa9\x92\xe5\x77\xdf\x28\x06\x8e\x76\xc6\xe0\xad\x13\x6e\x6c\xc7\xa8\xb4\xce\x9e\x5a\x80\x2f\xf0\x49\x14\x9e\xed\xab\x4b\x6d\x54\x86\xe5\x56\xa7\x99\x57\x95\x28\xbc\x33\x68\x2d\x0e\x41\xf1\x12\x95\x2c\xbe\x57\xba\xcb\x52\xd9\x2e\x46\x5a\xea\xce\x44\x6b\xe7\xb4\x70\xc9\x30\x77\xf4\xa3\x29\xe3\x5a\xaf\xcb\x59\xc1\xa4\x73\x6c\x4d\xa9\x96\x95\xce\x05\x9f\x67\xf5\x89\xaf\x61\x54\xae\x80\x37\x2b\xdb\x15\x22\x26\xb2\xb7\x3f\xd9\xde\x70\xa5\x7e\x7a\xc3\x62\x30\x04\xcc\x03\x17\xf1\x8b\xb9\x8f\x76\x0e\x16\xec\x5c\x1a\xbe\x02\x5b\x98\x6f\xb0\x3d\xec\xd1\xf6\xd2\xe1\x5a\x94\xee\x60\x67\x51\xf8\x0e\xd7\xf4\xc6\x11\x82\xdb\xb6\x17\x0f\xb6\x7b\x3b\xe3\x11\xe5\x3f\x6a\x77\x04\x36\x0b\x47\xd8\x39\x34\x5d\xc3\xcc\x11\xac\x27\xf9\x81\x0d\x34\x00\x63\x3e\xe3\x88\x5c\xcf\x4c\x9e\x71\x84\xed\x30\xa5\xb9\xfa\x4f\x27\x21\xcf\x56\x1a\x2f\xd9\x75\x1a\x34\x17\xe0\x25\xe1\x88\x41\x77\x57\xbc\xed\x7e\x79\xdb\xa5\x6b\x06\xc5\x74\x7c\xe3\x5e\x38\x82\xef\x7c\x4e\xc6\x6d\xa2\x15\x3a\xed\x42\xe4\x9c\xc0\xce\xb3\xc8\x17\x3e\x3b\xdb\xb5\x11\x7b\x5e\xed\x88\xfe\x31\xbc\x67\x5d\xe7\x73\x9f\x2a\xb3\x9a\xb0\xee\x90\x38\x8f\x8d\xf2\xbc\xbc\x1f\x40\x3e\xa5\x3a\x1e\xb9\x41\x27\xc5\xe7\x64\x7e\x92\x07\xcc\x8f\xb8\x3d\x9c\xa9\xe4\x7a\xb6\x41\x07\x41\x1e\x63\x93\xfc\x99\xec\x0c\x52\xce\x62\x32\x5b\x43\x8b\xad\xb7\xce\xf1\x7d\x3b\x3d\x8d\x75\x7d\x74\x20\x74\x7c\x43\xf1\x49\xbc\xf1\xa9\x1d\xc8\x31\x66\x8f\xe2\x8c\xf7\x76\x1c\xc7\x58\xff\x12\x7c\xf1\xf7\xe8\x30\x8e\x9d\xf0\xcc\x15\x55\xf6\xcf\xe4\x8a\x17\xbd\xd8\xf8\x39\x7d\x06\xbd\x40\x65\xbb\x03\xa2\x8d\xf3\xc7\x3e\x03\x8c\x9d\x0a\xdd\x7d\x15\xed\x1a\x14\x83\x44\x0b\xd9\x6e\x38\x5a\xb2\xe9\x14\xb3\xe9\x09\x2a\xd3\xdb\xb5\xf5\x2e\xe4\x3f\x98\x81\x3e\xcf\x8c\x43\xd0\x77\xc1\xce\x4e\x33\x7b\xbf\x40\x6a\xd7\xfe\xc9\x79\x5b\xab\x38\x2f\xef\xe0\x4c\xfa\x49\x8f\x00\x5e\xc1\x67\x85\xe9\xd4\xc2\xce\x79\xe1\x0e\x6a\xdf\xb7\xaa\x0d\x73\x7b\x0f\xa9\x37\x3e\x03\x5f\x06\x3b\xa7\x9c\x75\xfb\x60\xb5\x2d\xef\x19\x74\x8a\xf5\x9d\x9d\x19\xcb\x2e\x72\x65\xa7\x24\x41\x63\x92\xda\x19\x3e\xd8\x53\xd9\x2e\xf4\x6c\x0b\xed\x5b\x5a\x1f\x40\x9c\x32\xc3\x07\xd9\x4d\x69\x54\x9b\xb6\xb6\x13\x9f\xda\x8e\x4c\xdf\xda\xbb\x05\x83\xed\x30\xf5\xca\x2d\x59\xa6\xbc\x31\x9f\x3d\x57\xb6\x0b\x34\xe3\x48\x97\x6a\x1c\x0b\xdb\xb1\x87\x6f\x99\x5f\x66\xbd\xdd\x60\xdc\x3e\x9f\x8b\xf3\x77\x9e\x2d\xac\x07\x92\xf8\x67\x1a\x3f\x74\x3a\xbc\x09\x97\x63\x97\x79\x8b\x2e\xb6\x77\x0a\xf8\x3b\xf3\xf3\xd6\xaf\xc1\x9b\xe0\x7a\x61\xbf\x65\x27\xbd\xd6\xf5\xc5\x7f\x74\x88\x9c\x23\x7b\xc5\xcc\xc2\x78\xab\xb2\x71\x88\x07\x7c\x29\xfa\xc4\xde\x3b\x90\x1d\xae\xf9\x9d\x92\x4a\xe3\x01\x06\xcb\xbb\x52\x5e\xf9\xa7\x2f\x14\xeb\xe5\x04\xc4\xce\x80\xe5\x94\xc1\x6b\x8c\x64\xb7\xcd\xde\xd1\xf0\xbd\x9d\x36\x34\x8f\x27\x3c\x72\x36\x6f\xe7\xbb\xf2\x0e\x81\xad\x31\xd7\x53\xe3\x21\xee\xe3\x7e\xfc\xa2\x26\xc8\x5d\xb8\x10\x2c\x0f\x96\x8b\xe9\xac\x11\x1a\xed\x4b\xe4\xd4\xab\x57\x1d\x20\x3a\xa2\xd7\x1e\x4a\x76\xd5\x5a\xd5\x00\x9d\xf5\x1f\xac\x85\xb7\x77\xe4\xe4\xf4\x25\xb3\xf7\x50\x46\xcd\x5b\x34\x4b\x6a\x3c\x87\x4e\x6a\xcc\x0e\xfd\x7c\x6e\xa7\x2b\xbd\xf1\x8a\xf4\x55\xa5\xf6\x99\xc1\xf8\xab\xb6\x53\x26\x79\xaf\xa4\x52\xce\x1b\x6c\x67\x8f\x7c\xc3\x17\xf4\x1d\x5a\x25\xb7\x53\x2e\x62\xc1\xdf\xe4\xe4\xb0\x53\x2e\x46\x9b\xd1\xe3\x66\xe1\xf1\xbd\x09\xfc\xa5\x8e\xa4\xc6\x2a\xc5\x07\xd1\x06\x5e\xf3\x83\xf5\x20\x4e\x85\xed\x8c\xca\xae\x5e\xa7\x78\x40\xbd\xb2\x4e\xa3\x9d\x4e\x31\x87\xc6\x34\x1e\x7a\x55\xea\xd9\xf4\x12\x3d\x37\xba\x42\xce\xe9\x4b\x7b\xa7\x20\xd3\x39\x11\x5b\x74\xab\x9c\xf5\x7b\x7b\xaf\x30\xb7\xd3\xc3\xca\xfa\xc4\xc6\x4e\xcc\x2a\xe5\xe8\xc9\x34\x1f\xb8\xd1\x99\x3e\x85\xd3\x89\xf7\x64\x7e\xcd\x7a\x58\xea\xb1\xb4\x3c\x23\xff\xff\x3f\x00\x00\xff\xff\x92\x6d\xc9\xe0\x00\x30\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 28672, mode: os.FileMode(420), modTime: time.Unix(1585322116, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_table_consent_rule.down.sql":                   _1_create_table_consent_ruleDownSql,
	"1_create_table_consent_rule.up.sql":                     _1_create_table_consent_ruleUpSql,
	"2_alter_consent_record_add_version_uuid.down.sql":       _2_alter_consent_record_add_version_uuidDownSql,
	"2_alter_consent_record_add_version_uuid.up.sql":         _2_alter_consent_record_add_version_uuidUpSql,
	"3_rename_resource_to_data_class.down.sql":               _3_rename_resource_to_data_classDownSql,
	"3_rename_resource_to_data_class.up.sql":                 _3_rename_resource_to_data_classUpSql,
	"4_alter_consent_record_make_valid_to_optional.down.sql": _4_alter_consent_record_make_valid_to_optionalDownSql,
	"4_alter_consent_record_make_valid_to_optional.up.sql":   _4_alter_consent_record_make_valid_to_optionalUpSql,
	"bindata.go":                                             bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_table_consent_rule.down.sql":                   &bintree{_1_create_table_consent_ruleDownSql, map[string]*bintree{}},
	"1_create_table_consent_rule.up.sql":                     &bintree{_1_create_table_consent_ruleUpSql, map[string]*bintree{}},
	"2_alter_consent_record_add_version_uuid.down.sql":       &bintree{_2_alter_consent_record_add_version_uuidDownSql, map[string]*bintree{}},
	"2_alter_consent_record_add_version_uuid.up.sql":         &bintree{_2_alter_consent_record_add_version_uuidUpSql, map[string]*bintree{}},
	"3_rename_resource_to_data_class.down.sql":               &bintree{_3_rename_resource_to_data_classDownSql, map[string]*bintree{}},
	"3_rename_resource_to_data_class.up.sql":                 &bintree{_3_rename_resource_to_data_classUpSql, map[string]*bintree{}},
	"4_alter_consent_record_make_valid_to_optional.down.sql": &bintree{_4_alter_consent_record_make_valid_to_optionalDownSql, map[string]*bintree{}},
	"4_alter_consent_record_make_valid_to_optional.up.sql":   &bintree{_4_alter_consent_record_make_valid_to_optionalUpSql, map[string]*bintree{}},
	"bindata.go":                                             &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
