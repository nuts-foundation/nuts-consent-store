// Package migrations Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// 1_create_table_consent_rule.down.sql
// 1_create_table_consent_rule.up.sql
// 2_alter_consent_record_add_version_uuid.down.sql
// 2_alter_consent_record_add_version_uuid.up.sql
// 3_rename_resource_to_data_class.down.sql
// 3_rename_resource_to_data_class.up.sql
// bindata.go
package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1_create_table_consent_ruleDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\xf0\xf4\x73\x71\x8d\x50\x28\xcd\xcb\x2c\x8c\x2f\x4a\x2d\xce\x2f\x2d\x4a\x4e\xb5\xe6\x02\xcb\x84\x38\x3a\xf9\xb8\x2a\xa0\x09\xa2\x28\x4f\xce\x2f\x4a\x41\x51\x9c\x9c\x9f\x57\x9c\x9a\x57\x82\x2a\x85\xa4\xa5\x20\xb1\x24\x13\x24\x0f\x55\x87\xa2\x17\x43\x0e\x10\x00\x00\xff\xff\x55\xac\xed\x91\x9f\x00\x00\x00")

func _1_create_table_consent_ruleDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_table_consent_ruleDownSql,
		"1_create_table_consent_rule.down.sql",
	)
}

func _1_create_table_consent_ruleDownSql() (*asset, error) {
	bytes, err := _1_create_table_consent_ruleDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_table_consent_rule.down.sql", size: 159, mode: os.FileMode(420), modTime: time.Unix(1571041100, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_create_table_consent_ruleUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcd\x6e\xab\x30\x10\x85\xf7\x3c\xc5\x2c\x41\x62\x75\xa5\xac\xb2\xf2\x85\x49\x8a\x4a\xec\xd6\x31\x55\xb3\x42\x14\x5c\xc5\x55\x8b\x53\x30\x55\xfb\xf6\x55\xf8\x29\xc1\xd0\x74\xed\x33\x87\x6f\xbe\x21\xe0\x48\x04\x82\x20\xff\x63\x84\x53\x66\x94\x2c\x4d\x9a\xeb\xb2\x96\xa5\x01\xd7\x01\x00\x50\x05\x3c\x10\x1e\xdc\x10\xee\xfe\x5b\xad\x3c\xb8\xe3\xd1\x8e\xf0\x03\xdc\xe2\xc1\x6f\x03\x75\xf3\xf4\x22\x73\x33\x4d\x51\x26\x80\x26\x71\xdc\x45\xf2\xa6\x36\xba\x50\x59\x79\x2d\x94\xe5\x46\x57\xcb\x01\xc7\x5b\x3b\x4e\xcf\x9a\xd0\xe8\x3e\x41\x88\x68\x88\x8f\xd0\x94\xea\x3d\xb5\xb9\x19\xb5\x57\x71\xdb\x6e\x7f\x40\xf5\x47\x20\x6f\x3d\xf4\x76\x85\xaa\xf8\xb4\xfb\xd2\x91\x7e\xa1\xf9\xb2\xc9\x99\xe8\x1c\xc6\x2b\x99\xeb\xaa\x18\x6d\x46\x54\xe0\x16\xf9\xa5\x48\x20\x89\x60\x11\x0d\x38\xee\x90\x8a\x4e\x87\x4d\x61\xdf\x81\xe3\x06\x39\xd2\x00\xf7\x33\x26\x55\x78\x5d\xc7\x47\xf6\xaa\x8a\xf4\xb9\xd2\x6f\x10\x9e\xc1\xa6\xc2\xbb\x57\xa3\x97\xde\x8e\x59\x7d\x5c\xbe\x45\x7f\x80\xeb\x27\xe9\x77\x66\xd4\xb2\xe0\x9e\x7b\x67\xa6\x2a\x59\xeb\xa6\xca\x65\xef\x68\x3a\x92\x8e\xca\x3a\xb4\x21\x9d\x9a\xaf\x93\xfc\xed\x87\x6a\x93\x1b\xc6\x31\xda\xd2\xb3\x61\x77\x56\xea\xb5\x91\x0b\x8b\xf6\xbd\x86\x08\xa3\x10\x62\x8c\x02\x21\x20\xfb\x80\x84\x7f\xae\xde\x2f\xc3\xe8\x0f\xea\xfc\xeb\xfe\x74\x0d\x6f\xed\x7c\x07\x00\x00\xff\xff\xc0\x0e\x26\xec\x8b\x03\x00\x00")

func _1_create_table_consent_ruleUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_create_table_consent_ruleUpSql,
		"1_create_table_consent_rule.up.sql",
	)
}

func _1_create_table_consent_ruleUpSql() (*asset, error) {
	bytes, err := _1_create_table_consent_ruleUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_create_table_consent_rule.up.sql", size: 907, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_alter_consent_record_add_version_uuidDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\x41\x4f\x83\x40\x10\x85\xef\xfb\x2b\xde\x11\x12\x4e\x26\x3d\x71\x5a\x61\xaa\x1b\x61\xa9\xc3\x62\xec\x89\x90\x2e\xa6\x9b\x58\xa8\x80\xfd\xfd\x06\x6a\x4d\x25\x7b\xfe\xde\xcc\xbc\xf7\x26\xe5\x62\x07\xa5\x53\x7a\xc7\x77\xe7\xbe\xea\xa1\x3d\xf4\x83\xad\x2f\xed\x30\xba\xbe\x8b\x85\x90\x99\x21\x86\x91\x8f\x19\xe1\xd0\x77\x63\xdb\x4d\xbf\x22\x30\x69\x99\x13\x4c\xb1\x02\xf5\x74\x3a\xc7\x42\x24\x4c\xd2\x90\x7f\x34\x10\x00\xe0\x2c\x94\x36\xf4\x44\x8c\x1d\xab\x5c\xf2\x1e\x2f\xb4\x87\xac\x4c\xa1\x74\xc2\x94\x93\x36\xd1\xa2\x3c\x37\x93\x9b\xc7\x6f\x6b\x9c\xc5\x9b\xe4\xe4\x59\x72\xf0\xb0\xd9\x84\x60\xda\x12\x93\x4e\xa8\x5c\x4b\x03\x67\xc3\xeb\x8e\x4b\xf3\xe9\x6c\xfd\x31\xf4\x27\xa4\xb3\x31\x5d\x18\xe8\x2a\xcb\xee\xe9\xd4\xfb\xd8\xb1\x19\x8f\xff\xef\xdd\x38\x2a\xad\x5e\x2b\x12\x61\x2c\x84\xd2\x25\xb1\x99\x13\xad\x0b\x41\x49\x19\x25\x06\x81\xb3\x91\x27\x4a\x74\x67\x2d\xfa\x33\x12\x2d\x67\x43\x6c\xb9\xc8\xfd\x05\x2f\xbf\xf3\xd5\x7b\xe5\x3f\x01\x00\x00\xff\xff\xeb\xc2\xc4\xdc\xdb\x01\x00\x00")

func _2_alter_consent_record_add_version_uuidDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_alter_consent_record_add_version_uuidDownSql,
		"2_alter_consent_record_add_version_uuid.down.sql",
	)
}

func _2_alter_consent_record_add_version_uuidDownSql() (*asset, error) {
	bytes, err := _2_alter_consent_record_add_version_uuidDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_alter_consent_record_add_version_uuid.down.sql", size: 475, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_alter_consent_record_add_version_uuidUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x8b\x84\x30\x10\x85\x7b\x7f\xc5\x94\x0a\x36\x77\x60\x65\x35\x67\xe6\xee\x84\x6c\x64\x43\xb2\x6c\x27\xa2\x01\xd3\x24\x6e\x62\xfc\xfd\xcb\x2e\x6b\x63\x65\x39\x03\xef\x7b\xdf\x43\xae\x48\x82\xc2\x1f\x4e\x30\x7a\x17\x8d\x5b\xfb\x60\x46\x1f\x26\x40\xc6\xa0\xe9\xb8\xbe\x08\xd8\x4c\x88\xd6\x3b\x68\x85\xa2\x3f\x92\xc0\xe8\x17\x35\x57\xf0\x55\x67\xe7\x00\x29\xd9\x09\x6e\x28\x9b\x7f\x94\xf9\x77\x55\x15\x67\x83\x4b\x30\x9b\xf5\x29\xf6\xf3\x10\xe7\x03\x21\x6b\x24\xa1\x22\xd0\xa2\xbd\x6a\x82\x56\x30\xba\x43\x72\xf6\xf1\xe1\xf4\xbb\x76\x27\x0e\x0d\xf9\x32\xac\xf6\x75\xee\x6f\x3b\x95\x6f\xc7\x72\x9f\x5a\xd4\xcf\x00\x00\x00\xff\xff\x52\x46\xc5\x47\x1a\x01\x00\x00")

func _2_alter_consent_record_add_version_uuidUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_alter_consent_record_add_version_uuidUpSql,
		"2_alter_consent_record_add_version_uuid.up.sql",
	)
}

func _2_alter_consent_record_add_version_uuidUpSql() (*asset, error) {
	bytes, err := _2_alter_consent_record_add_version_uuidUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_alter_consent_record_add_version_uuid.up.sql", size: 282, mode: os.FileMode(420), modTime: time.Unix(1575298517, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_rename_resource_to_data_classDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xb1\x4e\x84\x40\x10\x86\xfb\x7d\x8a\x29\xb9\x84\xca\xe4\xaa\xab\xd6\xe5\xe7\x24\xe2\xac\x0e\x8b\xd1\x6a\x43\x96\x2d\x2e\x31\xa0\xc0\x15\xbe\xbd\x41\xf1\xc2\x49\xe1\x94\xbb\xff\x4c\xbe\x6f\xc6\x08\xb4\x03\x39\x7d\x5b\x82\x86\x38\xf6\xe7\x21\x44\x4a\x14\x7d\x57\xe8\xbb\x31\x76\x93\x1f\x62\xe8\x87\xd6\x9f\x5a\x2a\xd8\xe1\x08\x49\x97\xc0\x6f\x87\x9f\x3e\xdf\x23\x3d\x6b\x31\x77\x5a\x92\x9b\xfd\x7e\x47\x6c\x1d\x71\x5d\x96\xa9\x5a\xb2\xb9\x15\x14\x47\xa6\x7b\xbc\x26\x9b\xc1\xbb\x25\x34\x97\x20\x87\x80\x0d\xaa\x3f\x00\x94\x5c\x07\x2d\x53\x86\x12\x0e\x64\x74\x65\x74\x06\xb5\x3b\x28\xb5\x28\xd5\x5c\x3c\xd5\xa0\x82\x33\xbc\xd0\xb9\x3b\x7d\xf8\x8b\x9e\xe5\x0b\xf8\x96\x24\xbd\x96\x9a\x27\x16\x5c\x41\xdc\xec\x6e\x57\x3b\xfa\xb7\x93\x2a\x94\x30\x6e\xbb\xc5\x94\x42\xdf\x46\xca\xc5\x3e\x50\xdb\x4c\x8d\x0f\x6f\xcd\x38\x1e\x94\xca\xc4\x3e\xae\x89\xb7\x9f\x3f\x87\x5a\xbd\x7f\x05\x00\x00\xff\xff\xf9\x0e\x8e\x7a\xc1\x01\x00\x00")

func _3_rename_resource_to_data_classDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_rename_resource_to_data_classDownSql,
		"3_rename_resource_to_data_class.down.sql",
	)
}

func _3_rename_resource_to_data_classDownSql() (*asset, error) {
	bytes, err := _3_rename_resource_to_data_classDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_rename_resource_to_data_class.down.sql", size: 449, mode: os.FileMode(420), modTime: time.Unix(1575462137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_rename_resource_to_data_classUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xc1\x4e\x84\x30\x10\x86\xef\x7d\x8a\x39\xb2\x09\xf1\x60\xb2\xa7\x3d\xd5\xf2\xb3\x12\x71\xaa\x43\x31\x7a\x6a\x08\xf4\xb0\x89\x01\x05\xf6\xe0\xdb\x1b\x56\x24\xec\xae\xce\xa9\xe9\xff\x75\x3a\x5f\x6b\x04\xda\x81\x9c\xbe\xcb\x41\x4d\x35\x56\xbe\x7e\xaf\x86\x81\x22\x45\xa7\xaa\xbb\x76\x08\xed\xe8\xfb\x50\x77\x7d\xe3\x0f\x0d\x65\xec\xb0\x87\xc4\x0b\xd0\x04\x7a\xd1\x62\xee\xb5\x44\xb7\xdb\xed\x86\xd8\x3a\xe2\x32\xcf\x63\x35\x23\xa9\x15\x64\x7b\xa6\x07\xbc\x45\x57\xfd\x36\x33\x34\x95\x20\x85\x80\x0d\x8a\x8b\x7b\x29\x3a\x07\x2d\x53\x82\x1c\x0e\x64\x74\x61\x74\x02\xb5\xd9\x29\x35\xbb\x94\x9c\x3d\x97\xa0\x8c\x13\xbc\xd2\xb1\x3d\x7c\xfa\x95\x97\xe5\x95\xe5\xf5\x34\xf1\xc9\x67\x6a\x96\x71\x01\x71\x93\xad\x3d\x7b\x97\xff\x8e\x50\x81\x1c\xc6\x51\x1f\x86\xee\xd8\xd7\xe1\xe6\x0f\x70\xc9\x7e\x17\x7e\xfc\xfa\x08\x94\x8a\x7d\x5c\xb2\x9d\x52\x89\xd8\xa7\xf5\xf8\x97\xd1\xcf\x67\x2d\xbb\xdf\x01\x00\x00\xff\xff\x7e\x08\x1a\x88\xc3\x01\x00\x00")

func _3_rename_resource_to_data_classUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_rename_resource_to_data_classUpSql,
		"3_rename_resource_to_data_class.up.sql",
	)
}

func _3_rename_resource_to_data_classUpSql() (*asset, error) {
	bytes, err := _3_rename_resource_to_data_classUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_rename_resource_to_data_class.up.sql", size: 451, mode: os.FileMode(420), modTime: time.Unix(1575462150, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x99\x5d\x6f\xe3\xc6\xd5\xc7\xaf\xc5\x4f\xc1\x18\x48\x20\x3d\xf0\x23\xf3\xfd\xc5\xc0\x02\x45\xb2\x29\x90\x8b\x26\x45\x93\x5c\x75\x0a\x61\x48\x0e\x1d\xa2\xb2\xe8\x90\x52\x76\xbc\x8b\xfd\xee\xc5\x6f\xce\xc8\x96\x77\x93\xb5\xbd\xbb\x6d\xd1\x0b\x59\x24\x35\x3c\x73\x5e\xff\xff\x73\xc6\x17\x17\xe1\x5f\x75\xfb\x4f\x7d\x65\xc2\xeb\xe1\x6a\xd2\xfb\x61\xdc\xcd\xe1\x37\x63\x67\xc2\x2b\xb3\x33\x93\xde\x9b\x2e\x6c\x6e\xc3\xab\xf1\xff\x9b\x61\xd7\xe9\xbd\x5e\x87\xcb\x3f\xdd\xfd\xb4\x0a\x5f\xfe\x10\x7e\xff\xc3\x4f\xe1\xb7\x2f\xbf\xfb\x69\x1d\x5c\x5c\x84\xf3\x78\x98\x5a\x33\x5f\x72\x1d\x6f\xda\xc9\xe8\xbd\xd9\xec\x75\xb3\x35\x9b\x76\xdc\xcd\x66\xb7\xdf\x4c\x87\xad\x59\x77\xe3\xab\xdd\x7a\xfe\x75\xfb\xd8\xba\xc3\xcd\x71\x55\xb2\xd1\xdb\xbd\x99\xee\x7f\x36\xed\x38\x75\x1b\xdd\x75\x9b\xdf\xcc\x34\x0f\xe3\x6e\x73\x38\x0c\xdd\x03\xc9\x4f\x7d\xe7\x7e\x97\x74\x33\x99\x9d\xbe\x36\x9b\xc9\x88\x29\x9b\xfd\xb8\xc1\xee\x4d\xbb\xd5\xf3\xfc\x40\xfa\x63\x6b\xef\xa5\x1e\x7d\x77\x35\x06\x37\xef\xb9\x3b\x08\x86\xeb\x9b\x71\xda\x87\xcb\x60\x71\xd6\xdc\xee\xcd\x7c\x16\x2c\xce\xda\xf1\xfa\x66\x32\xf3\x7c\x71\xf5\x7a\xb8\xe1\x41\x7f\xbd\xe7\x6b\x18\xe5\xef\xc5\x30\x1e\xf6\xc3\x96\x9b\xd1\xbd\x70\xa3\xf7\xbf\x5c\xf4\xc3\xd6\x70\xc1\x83\x79\x3f\x0d\xbb\x2b\xf7\xdb\x7e\xb8\x36\x67\xc1\x2a\x08\xfa\xc3\xae\x3d\x6a\xf3\x37\xa3\xbb\x25\x17\xe1\xdf\xff\xc1\xb6\xe7\x21\xc6\x84\xf2\xda\x2a\x5c\x1e\x9f\x9a\x69\x1a\xa7\x55\xf8\x26\x58\x5c\xbd\x76\x77\xe1\xe5\x8b\x10\xad\xd6\xdf\x9b\x57\x08\x31\xd3\xd2\xa9\xcd\xfd\xd7\x87\xbe\x37\x93\x13\xbb\x5a\x05\x8b\xa1\x77\x2f\x7c\xf1\x22\xdc\x0d\x5b\x44\x2c\x26\xb3\x3f\x4c\x3b\x6e\xcf\xc3\xfe\x7a\xbf\xfe\x16\xe9\xfd\xf2\x0c\x41\xe1\x97\xbf\x5e\x86\x5f\xfe\x76\x26\x9a\xb8\xbd\x56\xc1\xe2\x6d\x10\x2c\x7e\xd3\x53\xd8\x1c\xfa\x50\xf6\x91\x4d\x82\xc5\x46\xd4\x79\x11\x0e\xe3\xfa\x9b\xf1\xe6\x76\xf9\x55\x73\xe8\xcf\xc3\xab\xd7\xab\x60\xd1\x6e\xbf\x3d\x6a\xba\xfe\x66\x3b\xce\x66\xb9\x0a\x3e\x97\x3e\x88\x11\xf9\x7f\x20\xc8\x4c\x93\xe8\xed\x1f\x36\x87\x7e\xfd\x35\xaa\x2f\x57\xe7\xac\x08\xde\x06\xc1\xfe\xf6\xc6\x84\x7a\x9e\xcd\x1e\x97\x1f\xda\x3d\x52\x9c\x7d\x3e\x1e\xc1\x62\xd8\xf5\x63\x18\x8e\xf3\xfa\xcf\xc3\xd6\x7c\xb7\xeb\xc7\xbb\xf7\x7c\x08\x8f\xcf\x4f\x24\xb8\x18\x86\xa1\x0f\x63\xb0\x98\x87\xd7\xee\x7e\xd8\xed\x8b\x2c\x58\x5c\x53\xda\xe1\x9d\xd0\xbf\x8c\x9d\x71\x0f\x7f\x1a\xae\x4d\x48\x9a\xac\xb9\x62\x9f\x8b\x8b\xf0\x7b\x64\x79\x13\xc8\x2c\xe7\x06\xc9\xa1\x65\x3f\xbc\xab\xc4\xca\xad\x5f\xae\xfc\xd6\x28\x73\xf7\xee\xda\xbd\x29\x52\x7f\x44\xa3\x53\xa9\xa8\xf8\x01\xa9\xac\x5f\xae\xc4\x80\x87\x42\xdd\x8b\x22\x14\x43\x1e\x08\xc5\xd0\x0f\x08\x65\xfd\x72\x75\xea\x86\x87\xa2\xdd\xeb\x7f\x2c\x7a\xe8\x6f\x9d\xb7\x3e\xbc\x03\xae\x5c\xae\xee\xdd\xfa\xde\x16\x27\xbe\xfe\x6e\x7e\x39\x4c\x0f\xb6\x79\xf5\x8b\xd9\xff\x62\xa6\x50\x87\xdd\x30\x99\x76\x3f\x4e\xb7\x1f\xd8\xce\xbd\xbf\x5c\x85\xcd\x38\x6e\xdf\x37\xe5\xab\x71\x5e\x63\x07\x7b\x7c\xf1\x22\x8c\x8e\xa1\xb8\x9d\x1f\x6c\x39\xcc\xe1\x7c\x3b\x3f\xe6\xbb\x1f\x6f\x67\x89\x87\x99\x7a\xdd\x9a\x37\x6f\x4f\xf6\xf3\xc9\x4d\xbd\x6e\x36\x1f\x00\xf6\x97\xe3\xab\xdd\x8f\xbf\x6e\xc3\x17\x3e\xd9\x97\x67\xca\xc6\xbd\xb2\x55\xa3\x6c\x54\x29\x1b\x45\xbf\xff\xe9\x7b\x65\xcb\x44\xd9\xa8\x56\xb6\xe7\xbb\x57\x36\xe7\x39\x9f\x4c\xd9\x32\x55\xb6\x8c\x95\xad\x3a\x79\x9e\x54\xca\xb6\x9d\xb2\x6d\xa3\x6c\xd2\x2a\x5b\xb5\xca\x26\xbd\xb2\x99\x56\x36\xe1\xb9\x91\x7b\xae\x79\x96\x19\x65\x9b\x5c\x59\x53\x28\x1b\x25\xf2\x5e\x95\x29\x9b\x56\xca\xa6\x5a\xd9\xbe\x56\xb6\xa9\x94\x4d\xb4\xb2\x3a\x12\x3d\x74\x22\xfb\x64\xfd\xbd\x3c\x27\x2b\x56\x36\x8f\x95\xad\x5b\xff\x41\xd7\xd2\x5f\x6b\xb9\xae\x12\x91\x55\xe5\xca\xea\x4c\x59\x9d\x2b\x9b\x44\xca\x36\xb1\xb2\x49\xa6\x6c\x9c\xca\xb7\xb3\x33\x57\xb6\x2a\x65\xbf\xb8\x54\x36\x4b\x95\x8d\x8c\xb2\xf1\x3b\xfe\xe9\xfd\x5a\xdd\x2a\x6b\x3a\x65\xeb\x58\xf6\xbe\xf7\xe3\xd9\x91\x0a\x9e\x10\x22\x8f\x5b\xbf\xc7\x07\x47\x74\x3b\xe1\x93\x60\xb1\x78\x4a\xdc\xcf\x83\xc5\xe2\xec\x29\xfd\xc1\xd9\x79\xb0\x58\x91\x51\x4f\x55\x17\x4d\xff\xcf\xc1\xea\xa9\xa6\x0e\x57\xef\xc8\xeb\xe9\x56\x3f\xc6\x18\x77\x40\xef\xa0\xfa\xf2\xc5\xbb\xc5\xf2\x06\xdc\xbb\x0c\x9f\x68\xaa\x43\xc2\xcb\x30\xce\xeb\x73\x57\x83\x97\xa7\xf8\xb4\xcc\x92\x68\xe5\x9e\x83\x1a\x97\x82\x2a\x3f\xef\x06\xbb\x8c\xf3\x32\x8e\xb2\x38\x8e\xa2\xf3\x30\x5a\xbd\x0d\x16\x1a\x4d\xbe\x72\x4e\x78\xe3\x2c\xbf\x0c\xbd\x03\x50\xf3\xd2\xfd\x7d\x7b\x17\x3e\x7d\xfe\xe4\xaa\xfd\xf9\xe6\x63\x6b\x96\x1a\xaa\x13\xa9\xc5\xc2\x28\xab\x1b\x65\xd3\x48\x72\x97\xdc\xef\x4b\x65\xd3\x56\xd9\x36\x97\x3a\xa5\x76\x8a\x44\xd9\x32\x97\x9a\x20\x97\x9b\x44\x6a\x9e\xf5\x59\xad\x6c\xa5\xa5\xce\x4c\xab\x6c\x57\x28\x9b\xc6\x92\xf7\x4d\xaa\x6c\x46\x8d\x64\xca\xe6\x5e\xa6\xab\x9d\x46\xd9\x3c\x95\x7d\xb9\xef\x1b\x65\xfb\xc2\x5f\x53\xd3\xb5\xb2\x6d\xac\x6c\x17\x29\x5b\x66\x52\x3b\x69\x2a\x35\x57\xf4\xca\x36\xd4\x76\xac\xac\x89\x94\xcd\xb0\x37\xf3\xf5\xeb\x6d\x2c\x52\xb1\x93\x3d\x8a\x42\xd9\x3a\xf3\xb6\x74\x52\xef\xa6\x11\x1b\xea\x42\x6c\x8a\xd8\xab\x94\x6f\xfc\x04\x5e\x45\xb9\xf8\x01\xbf\xc4\x46\xd9\xce\x5f\x1b\xa3\x6c\x6f\x94\xcd\x1b\x65\x75\x27\x6b\xc0\x21\x93\x2a\xdb\x81\x77\x46\x30\x30\x4a\xe5\x1d\x93\x88\x2d\xe8\xcd\x33\xfc\xd8\xa7\x82\x91\x49\x22\x38\x89\x6d\xe8\x06\x46\x25\x85\xb2\x55\x24\xdf\xe0\x27\x32\xb2\x5c\xfc\xad\xf1\x6d\xa1\x6c\xa3\x45\xc7\xbc\x56\xb6\xac\x05\x33\xb1\xd1\x10\x8f\x42\xf0\x0c\xbc\xc4\x9e\xb6\x14\x5d\xd3\x46\x30\xb5\xed\xc5\x07\xf8\xd6\x80\xa5\x46\x62\x5c\x55\xca\x16\x95\x7c\x57\xbd\xfc\xee\x64\x6a\x65\xd3\x4e\xb0\xb8\xa9\x95\x8d\x6b\xb9\x66\x0f\xa7\x5f\x23\x79\x54\x82\xb5\xf8\x1f\x1d\x4a\x89\x05\x36\xf3\xae\xe3\x83\xc2\x63\xab\x96\x18\x37\x99\xc4\xbd\x4b\x04\x17\x4b\x72\x31\xf6\xb8\x8e\xcf\x6a\x65\xeb\x5a\x74\x8c\xc9\x9d\x42\xd9\xa4\xf1\xcf\x1a\x91\x13\xa3\x73\xe7\x6d\xce\x24\x1f\xe2\x42\x64\x10\x57\x72\x03\x3d\xaa\x5a\xd9\x82\xdf\x88\x6f\x27\x1c\x42\x1c\xeb\xc8\xe7\xae\x91\xdc\x22\x06\x05\x36\x51\x27\xb1\xc4\x34\xc2\xe7\xb5\xe8\xe9\x6a\xa8\x94\x78\x25\x3e\x5f\xcb\x4a\xd9\xbc\x13\x3f\x63\x37\x79\x8c\x6e\xc8\xc5\xee\xc6\xbf\x8b\x2f\xc8\x9f\xda\x48\x3e\x10\xcb\x36\x51\xb6\x69\xc4\x97\x3a\x55\xb6\x2e\x95\xed\x8c\xe4\x90\x8b\x6d\x27\x75\x43\xbe\x93\x03\xf8\x98\xdc\xc0\xfe\xa4\x54\xd6\xb0\xa6\x94\x1c\xef\x32\xf1\x9b\xf1\x7b\x94\xc4\xa5\x94\x7d\xe0\xb5\xfc\xe8\x37\xf6\xd5\xca\x16\x70\x6b\x2f\x31\x87\x4f\xc1\x04\xf6\xe5\x37\xee\x89\x0f\x35\x56\xfb\x9a\xd1\xe4\x0d\x79\xeb\xb9\xcc\xd5\xa2\x96\x67\x71\x23\xf1\xa1\xee\x3b\x2d\xf6\x52\xfb\xf8\x12\xfd\xf2\x42\xf2\x88\xbc\x21\xd6\x51\x23\x18\x80\xaf\x1a\x64\x15\x82\x5b\xf8\x00\x1f\x81\x37\xf4\x07\xf0\x3e\x3a\xb8\xba\x6e\xc4\x76\xea\x1a\x3f\x68\x23\xbe\x82\xe3\xdb\x54\xf2\x04\x6e\x66\x1f\xa7\x63\x23\x75\x0a\x7e\x10\x73\xfc\x8f\xde\x25\x72\xcb\xf7\x79\xba\x8d\x84\xc3\x89\x2b\x38\xe6\xb0\x34\x7d\x16\x4f\x3b\x50\xfe\xbc\x2c\xed\x44\x3e\xca\xd1\x32\xdf\x3e\x9d\xa1\x9d\xd4\x4f\xe5\xe7\x53\x6b\xff\x13\xec\x7c\x34\xd2\x73\x73\x1d\x95\xcf\xe5\xe6\x3c\xa9\xab\x3c\x2e\x3f\x0b\x37\x3f\xf1\x40\xe3\x53\xba\xeb\xa2\x95\x6a\x01\x9d\xe9\x68\xab\x54\x10\xf6\xc8\xd4\x54\x2f\x55\x01\x2a\x52\x09\xa0\x5b\x9c\x08\x9a\x91\xc5\x20\x2f\x08\x9d\x6b\xa9\x44\x87\x98\x8d\xbf\xae\xa5\x6a\xa8\x34\x97\xed\xb5\xa0\x61\x62\x04\x21\x6a\x50\x89\x8a\xac\xa4\xea\xfa\x4e\x3e\xa0\x21\x55\x0f\x52\x26\xb9\xa0\x4c\xef\x2b\xb1\x05\xa9\x5a\x41\x48\x57\x45\xb9\xc8\xa7\xda\x40\x63\xd8\xb8\xd4\x82\x94\xa0\x82\x29\x05\xd9\xa8\x58\x90\xff\xc8\x14\xd8\x09\xb3\x26\xbe\x62\xe9\x12\x60\x3c\xd6\xe2\x37\x6c\x47\x57\x98\x00\x74\x00\x3d\xf0\x13\xac\x05\x3b\x99\x63\xe7\x50\x4a\x27\x00\x43\xa1\x6f\xd3\x0b\xe3\x22\xaf\xf0\xec\x42\x57\x9f\xb5\xd2\xe5\x83\x36\xb0\x17\x88\x91\x7a\x3d\xe9\x5e\xe8\xfa\x59\xe3\x98\x2a\x12\xf4\x49\xb3\xfb\x6e\x1f\xc4\xa5\xbb\x80\x2d\x61\x67\x6c\xc8\x32\x41\xb0\xb8\x93\x0e\x0b\x14\x87\xc1\x63\x8f\x58\xa0\xab\x9b\x20\x5a\x91\x8d\xfd\xec\x0b\x23\x20\x07\x54\x45\x16\x1d\x05\x53\x06\x5d\x46\x5a\xca\x73\x62\xd3\xfa\x4e\xa8\x68\x64\x8a\xa1\xb3\xe2\xb9\xc9\xe4\xe3\xd8\x23\x91\x4e\xa4\x89\x94\xed\x6a\x41\x4e\x58\x10\x84\x26\x4f\x90\x45\xae\x10\x63\xf4\xcb\x3c\xe2\xc1\x1a\x0e\x51\x1b\x61\x04\x9e\xd3\xb1\xc0\x36\xe4\x24\x79\x00\xd2\xbb\x0e\xa6\x94\x69\x09\xb4\x77\x5d\x5f\x27\xac\x6c\xfc\x64\x46\x17\x02\xd3\xf2\x6e\x77\x64\xfc\x4a\xfc\x4d\xac\x2a\x8f\xbe\xe4\x72\xe7\x99\xd9\x4d\x74\x30\x9f\x91\xdc\x46\x57\x72\xd6\x4d\x8d\x99\xc4\x81\xdc\x43\xc6\x31\x86\xac\x87\x55\x5c\xad\xf8\x2e\x85\x35\xe4\x2b\x4c\x8e\x7e\xe4\x08\xfa\xd2\xa9\xe2\x6b\xec\xa4\x73\xea\xb5\x30\x3a\xfb\x70\x5f\xf8\x89\x0e\x5b\x61\xef\xb6\xf2\xb9\x9f\xfb\xd8\xf5\xe2\x8f\xce\xe7\x3f\x79\x9e\xf6\xf7\xdd\xe3\x29\xab\xe0\x43\x62\xda\x66\xd2\xc9\x75\xcd\xe9\xba\x7b\x56\x79\x1e\x9c\x7c\x04\xc7\x3c\x6f\x03\xc7\x38\xcf\x3d\xe7\x7d\x87\x7f\x9e\xb7\xe3\x93\xd8\xe8\xa3\xbc\xf4\xb9\xb8\xe9\xf9\xee\xf0\x4c\x95\x95\xf9\xff\x00\x53\x7d\xc2\x44\xd9\x4a\x1d\x53\xff\xd5\xf1\x94\xe6\x84\xa7\xa8\x11\x30\xd3\x61\x14\xdd\x98\x16\x6c\x73\xf8\x1c\x49\x27\x9a\xe6\x52\x77\xa6\x10\xbc\x70\x58\xd5\x2a\x5b\x64\x52\x8b\x74\xb6\xdc\x27\xfe\xd4\xc5\x4d\x6c\xfe\x44\x86\xe9\x03\x9e\xe9\x3d\x36\xb9\x13\x26\x23\xd8\x08\xfe\x3b\xf9\xb5\x60\x1b\x38\x83\x3e\x74\xf8\xc8\xa5\x8b\x64\x4a\x60\x7a\xa4\x4e\xb1\x19\x4c\x44\x7f\xb8\x2a\x2e\xfd\x09\x56\x23\xd8\x85\xbe\x4c\x1b\xac\x83\xe3\xe0\x63\x3a\x5f\x1d\x09\xc6\x31\x09\xc2\x53\xf8\x0c\x9c\x03\xdb\x99\xa8\xdc\x54\xdc\xf8\x09\x2b\xf7\x98\xde\xfb\x49\xdc\x4f\x62\xec\x95\xfa\xc9\xaa\xf7\x93\x71\xe1\x79\x12\x5f\x33\x15\x83\xe3\x51\x2d\x36\x27\x95\x60\x3e\xbe\xc5\xaf\xbd\x9f\x06\x78\x2f\xf6\xef\xba\x9e\xc1\x4f\xf8\xac\x85\xdf\x90\x43\xe7\xdd\xfb\x6e\xdb\xc9\x4f\x85\x4b\xf1\x19\x3e\x85\x8f\xe0\x4a\x78\x14\x5d\xe9\xd2\xe1\x7d\xfc\x44\x37\x7f\xe4\x64\x7c\xe8\x78\x06\x79\xb1\x70\xaf\x9b\x7a\x1a\x99\xf8\x88\x17\x5d\x35\x1d\x38\xfa\xa5\x89\x70\x1e\xeb\x99\x84\x89\xb5\x9b\x12\xe1\xb1\x5c\xae\x5d\x7f\x90\xf8\x53\x3a\x2d\xbc\xd1\xf6\xef\xe7\x9d\x3b\x5d\x4b\x24\x1e\xad\x9f\x3a\x63\xfd\x49\xf8\xfa\xb1\x1d\xfc\x73\xc4\x3f\x0b\x5b\x7f\xb7\xb3\x7f\xce\x6e\x9f\x13\x57\xff\x1d\x1d\xff\x73\x1d\xe1\x31\x35\xa9\x92\xff\x26\xa6\x3e\xf2\x0f\xc7\x4f\xe9\xfa\xdd\xf9\x5c\x2c\xdd\x4d\xe6\x91\xf0\xae\xeb\x2f\x04\x85\xca\x4e\xce\x17\xa8\xe4\xc6\x77\x76\xcc\xed\x74\x7e\x74\xf9\x74\x9c\x9d\xef\xc0\xa9\x6e\x2a\xda\xf8\xca\x8b\x7c\x17\x4d\x67\x59\xf8\x0a\xae\x0b\xe9\x7c\x40\x4d\x50\x1c\x34\x03\x95\x40\x11\xd0\x8c\xea\xa7\xb3\xa2\xc2\x41\xc9\xcc\x77\xd9\xb5\xaf\x74\xf4\xce\xfc\x39\x85\xab\x60\x3f\xcf\xd3\xe5\x82\x2c\xe9\xf1\x2c\xa3\x11\x04\xc1\x0e\x3a\x3d\x50\xc0\xe9\x17\x4b\xc7\x4c\x67\x16\x67\x7e\x6d\x29\xa8\x88\x7c\x74\x02\x4d\xdc\x59\x43\xef\xa7\x96\x4a\x3a\x68\xec\x3c\x22\x05\x9d\x23\xa8\x8b\x6e\xec\x8f\x9e\x75\x29\xb6\xa0\x17\xeb\x59\x9b\x1a\x61\x80\x24\x95\xa9\xa3\x38\xee\x51\x8a\x1c\x50\xd9\xa1\x65\x27\xe7\x52\x20\x4b\xe1\xbb\xf9\xd2\x77\xb9\xee\xec\xb0\x96\xf5\xb0\x93\x3b\x1b\xcb\x45\xff\xcc\x9f\xbb\xc0\x34\x4c\x44\x89\x9f\xa8\xda\x58\xec\xa1\x33\x65\x82\xa8\xfd\x39\x59\x55\xaa\x7f\x05\x00\x00\xff\xff\x54\x9a\xe4\x71\x00\x20\x00\x00")

func bindataGoBytes() ([]byte, error) {
	return bindataRead(
		_bindataGo,
		"bindata.go",
	)
}

func bindataGo() (*asset, error) {
	bytes, err := bindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bindata.go", size: 20480, mode: os.FileMode(420), modTime: time.Unix(1575462175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1_create_table_consent_rule.down.sql":             _1_create_table_consent_ruleDownSql,
	"1_create_table_consent_rule.up.sql":               _1_create_table_consent_ruleUpSql,
	"2_alter_consent_record_add_version_uuid.down.sql": _2_alter_consent_record_add_version_uuidDownSql,
	"2_alter_consent_record_add_version_uuid.up.sql":   _2_alter_consent_record_add_version_uuidUpSql,
	"3_rename_resource_to_data_class.down.sql":         _3_rename_resource_to_data_classDownSql,
	"3_rename_resource_to_data_class.up.sql":           _3_rename_resource_to_data_classUpSql,
	"bindata.go":                                       bindataGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1_create_table_consent_rule.down.sql":             &bintree{_1_create_table_consent_ruleDownSql, map[string]*bintree{}},
	"1_create_table_consent_rule.up.sql":               &bintree{_1_create_table_consent_ruleUpSql, map[string]*bintree{}},
	"2_alter_consent_record_add_version_uuid.down.sql": &bintree{_2_alter_consent_record_add_version_uuidDownSql, map[string]*bintree{}},
	"2_alter_consent_record_add_version_uuid.up.sql":   &bintree{_2_alter_consent_record_add_version_uuidUpSql, map[string]*bintree{}},
	"3_rename_resource_to_data_class.down.sql":         &bintree{_3_rename_resource_to_data_classDownSql, map[string]*bintree{}},
	"3_rename_resource_to_data_class.up.sql":           &bintree{_3_rename_resource_to_data_classUpSql, map[string]*bintree{}},
	"bindata.go":                                       &bintree{bindataGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
